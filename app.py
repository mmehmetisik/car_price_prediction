import streamlit as st
import pandas as pd
import numpy as np
import pickle

# Uygulama KonfigÃ¼rasyonu
st.set_page_config(
    page_title="AraÃ§ Fiyat Tahmini",
    page_icon="ğŸš—",
    layout="wide"
)

# Model, scaler ve feature columns yÃ¼kleme
@st.cache_resource
def load_model_and_features():
    model_path = "C:/Users/ASUS/Desktop/car_price_project/models/final_model.pkl"
    feature_columns_path = "C:/Users/ASUS/Desktop/car_price_project/models/feature_columns.pkl"
    scaler_path = "C:/Users/ASUS/Desktop/car_price_project/models/scaler.pkl"
    
    with open(model_path, "rb") as file:
        model = pickle.load(file)
    with open(feature_columns_path, "rb") as file:
        feature_columns = pickle.load(file)
    with open(scaler_path, "rb") as file:
        scaler = pickle.load(file)
    return model, feature_columns, scaler

model, feature_columns, scaler = load_model_and_features()

# Ana baÅŸlÄ±k
st.title('ğŸš— AraÃ§ Fiyat Tahmin UygulamasÄ±')
st.markdown("---")

# Yan panel (sidebar) iÃ§in aÃ§Ä±klama
st.sidebar.header("Uygulama HakkÄ±nda")
st.sidebar.markdown("""
### AraÃ§ Fiyat Tahmin Sistemi

Bu uygulama, geliÅŸmiÅŸ makine Ã¶ÄŸrenmesi algoritmalarÄ± kullanarak araÃ§ fiyat tahmini yapar.

**Ã–zellikler:**
- GerÃ§ek piyasa verilerine dayalÄ± tahminler
- 50'den fazla Ã¶zellik analizi
- AnlÄ±k fiyat hesaplama
- DetaylÄ± araÃ§ Ã¶zellikleri analizi

**Veri KaynaÄŸÄ±:** 
- USA Cars Dataset
- 2,500+ araÃ§ verisi
- GÃ¼ncel piyasa analizi
""")

# Ana panel - KullanÄ±cÄ± girdileri
st.header('AraÃ§ Ã–zelliklerini Giriniz')

# 3 sÃ¼tunlu layout
col1, col2 = st.columns(2)

# Ä°lk sÃ¼tun
with col1:
    brand = st.selectbox('Marka', ['ford', 'chevrolet', 'toyota', 'honda', 'bmw', 'nissan', 'dodge', 'mercedes-benz'])
    year = st.slider('Model YÄ±lÄ±', 2000, 2024, 2020)
    mileage = st.number_input('Kilometre', min_value=0, max_value=300000, value=50000, step=1000)

# Ä°kinci sÃ¼tun
with col2:
    color = st.selectbox('Renk', ['white', 'black', 'silver', 'gray', 'blue', 'red'])
    title_status = st.selectbox('AraÃ§ Durumu', ['clean vehicle', 'salvage insurance loss'])
    state = st.selectbox('Eyalet', ['california', 'florida', 'texas', 'new york', 'pennsylvania'])

# Tahmin butonu
if st.button('Fiyat Tahmini Yap', type='primary'):
    try:
        # Temel Ã¶zellikleri DataFrame'e dÃ¶nÃ¼ÅŸtÃ¼r
        input_data = pd.DataFrame({
            "year": [year],
            "mileage": [mileage],
            "brand": [brand],
            "color": [color],
            "title_status": [title_status],
            "state": [state]
        })

        # TÃ¼retilmiÅŸ Ã¶zellikleri ekle
        input_data['car_age'] = 2024 - input_data['year']
        input_data['avg_km_per_year'] = input_data['mileage'] / input_data['car_age']
        input_data['is_premium'] = input_data['brand'].isin(['bmw', 'mercedes-benz']).astype(int)
        input_data['is_popular_color'] = input_data['color'].isin(['white', 'black', 'silver', 'gray']).astype(int)
        input_data['clean_title_score'] = (input_data['title_status'] == 'clean vehicle').astype(int)

        # NÃ¼merik kolonlarÄ± Ã¶lÃ§eklendir
        numeric_cols = ['year', 'mileage', 'car_age', 'avg_km_per_year']
        input_data[numeric_cols] = scaler.transform(input_data[numeric_cols])

        # One-Hot Encoding uygula
        input_data = pd.get_dummies(input_data, columns=['brand', 'color', 'title_status', 'state'])

        # Eksik kolonlarÄ± ekle
        for col in feature_columns:
            if col not in input_data.columns:
                input_data[col] = 0

        # SÃ¼tunlarÄ± modele uygun hale getir
        input_data = input_data[feature_columns]

        # Tahmin yap
        prediction = model.predict(input_data)[0]

        # SonuÃ§ gÃ¶sterimi
        st.success(f'Tahmini Fiyat: ${prediction:,.2f}')

        # DetaylÄ± aÃ§Ä±klama
        st.markdown("---")
        st.markdown("### FiyatÄ± Etkileyen FaktÃ¶rler")
        col1, col2 = st.columns(2)

        with col1:
            st.write(f"- AraÃ§ YaÅŸÄ±: {2024 - year} yÄ±l")
            st.write(f"- Kilometre: {mileage:,} km")
            st.write(f"- Premium Marka: {'Evet' if brand in ['bmw', 'mercedes-benz'] else 'HayÄ±r'}")

        with col2:
            st.write(f"- Durum: {title_status}")
            st.write(f"- Lokasyon: {state}")
            st.write(f"- Renk: {color}")

    except Exception as e:
        st.error(f"Bir hata oluÅŸtu: {str(e)}")
        st.error("LÃ¼tfen tÃ¼m alanlarÄ± doÄŸru ÅŸekilde doldurunuz.")
